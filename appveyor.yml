environment:
  my_version_number: 1.0.0          # DONT FORGET TO CHANGE IS IN THE ISS FILE
  application_name: Music           # DONT FORGET TO CHANGE IS IN THE ISS FILE

  matrix:
    - job_name: Nuget
      project_name: Music
    - job_name: Exe
      project_name: Test

matrix:
  fast_finish: true

version: $(my_version_number).{build}

skip_tags: true

configuration: Release

before_build:
  - 'curl -H "Authorization: token %download_token%" -H "Accept: application/vnd.github.v3.raw" -O -L "%download_link%/developer-certificate.pfx"'
  - ps: nuget restore -Verbosity quiet

build:
  project: $(project_name)/$(project_name).csproj
  verbosity: minimal
  parallel: true

for:
  - matrix:
      only:
        - job_name: Nuget
    build:
      publish_nuget: true

  - branches:
      only:
        - master

    dotnet_csproj:
      patch: true
      file: '**\*.csproj'
      version: '$(my_version_number)'
      package_version: '$(my_version_number)'
      assembly_version: '$(my_version_number)'
      file_version: '$(my_version_number)'
      informational_version: '$(my_version_number)'

    matrix:
      only:
        - job_name: Exe

    after_test:
      - ps: dotnet publish "-p:PublishProfile=$($env:project_name)\$($env:project_name).csproj" -c:Release -o:Publish\bin\64bit -v:m -r:win-x64   --self-contained:true -p:PublishSingleFile=true -p:PublishTrimmed=true
      - ps: dotnet publish "-p:PublishProfile=$($env:project_name)\$($env:project_name).csproj" -c:Release -o:Publish\bin\linux -v:m -r:linux-x64 --self-contained:true -p:PublishSingleFile=true -p:PublishTrimmed=true
      - ps: dotnet publish "-p:PublishProfile=$($env:project_name)\$($env:project_name).csproj" -c:Release -o:Publish\bin\osx   -v:m -r:osx-x64   --self-contained:true -p:PublishSingleFile=true -p:PublishTrimmed=true
      - ps: cd Publish\bin\osx
      - ps: ls
      - ps: cd ../linux
      - ps: ls

    artifacts:
      - path: /Publish/bin/64bit/$(application_name).exe
        name: WinInstaller
      - path: /Publish/bin/osx/$(application_name).*
        name: MacInstaller
      - path: /Publish/bin/linux/$(application_name).*
        name: LinuxInstaller

    deploy:
      - provider: GitHub
        release: $(my_version_number)
        auth_token: # encrypted token:
          secure: HESVuhwKdUbPpbBsQrWslB7GYNy5r03/MN/enpu7UWbY886bOE+EpbEFwAVMrtLO #REPLACE WITH TOKEN
        artifact: WinInstaller, MacInstaller, LinuxInstaller
        draft: false
        prerelease: false
        force_update: false
        on:
          branch: master

    - matrix:
        only:
          - job_name: Nuget

      deploy:
        - provider: NuGet
          api_key:
            secure: dvBoUwBIXmJhZm9jD5jxnU5FjrHji0KMbTMxgui4jLBnUbFUkBoDN81yuhevoOFo
          artifact: /.*(\.|\.s)nupkg/
  
        - provider: NuGet
          api_key:
            secure: t+q9dcBPFxzZdmdGxIahNaP0GHE90XdbEHHVMrmroJpFSCkM3d3tQ2QOtPYQTBpu
          server: https://nuget.pkg.github.com/TheSwerik/index.json
          artifact: /.*(\.|\.s)nupkg/
          username: TheSwerik